@import '_transformer-mixins.sass'
@import '_colors-functions.scss'
@import '_theme-functions.scss'


// Position

.#{$classPrefix}static
    +transformerConstructor('position')
        position: static

.#{$classPrefix}relative
    +transformerConstructor('position')
        position: relative

.#{$classPrefix}fixed
    +transformerConstructor('position')
        position: fixed

.#{$classPrefix}sticky
    +transformerConstructor('position')
        position: sticky

.#{$classPrefix}absolute
    +transformerConstructor('position')
        position: absolute


// Width

.#{$classPrefix}min-width
    +transformerConstructor('minWidth')
        min-width: $standardSize * 4

    &-xxs
        +transformerConstructor('minWidth')
            min-width: $xxs * 4

    &-xs
        +transformerConstructor('minWidth')
            min-width: $xs * 4

    &-sm
        +transformerConstructor('minWidth')
            min-width: $sm * 4

    &-md
        +transformerConstructor('minWidth')
            min-width: $md * 4

    &-lg
        +transformerConstructor('minWidth')
            min-width: $lg * 4

    &-xl
        +transformerConstructor('minWidth')
            min-width: $xl * 4

    &-xxl
        +transformerConstructor('minWidth')
            min-width: $xxl * 4

    &-full
        +transformerConstructor('minWidth')
            min-width: calc(100%)

    &-seven-eighths
        +transformerConstructor('minWidth')
            min-width: calc(87.5%)

    &-five-sixths
        +transformerConstructor('minWidth')
            min-width: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('minWidth')
            min-width: calc(80%)

    &-three-quaters
        +transformerConstructor('minWidth')
            min-width: calc(75%)

    &-two-thirds
        +transformerConstructor('minWidth')
            min-width: calc(66%)

    &-five-eighths
        +transformerConstructor('minWidth')
            min-width: calc(62.5%)

    &-three-fifths
        +transformerConstructor('minWidth')
            min-width: calc(60%)

    &-half
        +transformerConstructor('minWidth')
            min-width: calc(50%)

    &-three-sixths
        +transformerConstructor('minWidth')
            min-width: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('minWidth')
            min-width: calc(40%)

    &-three-eighths
        +transformerConstructor('minWidth')
            min-width: calc(37.5%)

    &-third
        +transformerConstructor('minWidth')
            min-width: calc((100% / 3))

    &-quater
        +transformerConstructor('minWidth')
            min-width: calc(25%)

    &-fifth
        +transformerConstructor('minWidth')
            min-width: calc(20%)

    &-sixth
        +transformerConstructor('minWidth')
            min-width: calc((100% / 6))

    &-eighth
        +transformerConstructor('minWidth')
            min-width: calc(12.5%)


[class*="bubble"].#{$classPrefix}min-width, 
[class*="card"].#{$classPrefix}min-width, 
[class*="button"].#{$classPrefix}min-width, 
[class*="badge"].#{$classPrefix}min-width, 
[class*="pile"].#{$classPrefix}min-width, 
[class*="input"].#{$classPrefix}min-width,
[class*="table"].#{$classPrefix}min-width,
    &-full
        +transformerConstructor('minWidth')
            min-width: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('minWidth')
            min-width: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('minWidth')
            min-width: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('minWidth')
            min-width: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('minWidth')
            min-width: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('minWidth')
            min-width: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('minWidth')
            min-width: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('minWidth')
            min-width: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('minWidth')
            min-width: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('minWidth')
            min-width: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('minWidth')
            min-width: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('minWidth')
            min-width: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('minWidth')
            min-width: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('minWidth')
            min-width: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('minWidth')
            min-width: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('minWidth')
            min-width: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('minWidth')
            min-width: calc(12.5% - (#{$basicMargin}*2))


.#{$classPrefix}width
    +transformerConstructor('width')
        width: $standardSize * 4

    &-xxs
        +transformerConstructor('width')
            width: $xxs * 4

    &-xs
        +transformerConstructor('width')
            width: $xs * 4

    &-sm
        +transformerConstructor('width')
            width: $sm * 4

    &-md
        +transformerConstructor('width')
            width: $md * 4

    &-lg
        +transformerConstructor('width')
            width: $lg * 4

    &-xl
        +transformerConstructor('width')
            width: $xl * 4

    &-xxl
        +transformerConstructor('width')
            width: $xxl * 4

    &-full
        +transformerConstructor('width')
            width: calc(100%)

    &-seven-eighths
        +transformerConstructor('width')
            width: calc(87.5%)

    &-five-sixths
        +transformerConstructor('width')
            width: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('width')
            width: calc(80%)

    &-three-quaters
        +transformerConstructor('width')
            width: calc(75%)

    &-two-thirds
        +transformerConstructor('width')
            width: calc(66%)

    &-five-eighths
        +transformerConstructor('width')
            width: calc(62.5%)

    &-three-fifths
        +transformerConstructor('width')
            width: calc(60%)

    &-half
        +transformerConstructor('width')
            width: calc(50%)

    &-three-sixths
        +transformerConstructor('width')
            width: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('width')
            width: calc(40%)

    &-three-eighths
        +transformerConstructor('width')
            width: calc(37.5%)

    &-third
        +transformerConstructor('width')
            width: calc((100% / 3))

    &-quater
        +transformerConstructor('width')
            width: calc(25%)

    &-fifth
        +transformerConstructor('width')
            width: calc(20%)

    &-sixth
        +transformerConstructor('width')
            width: calc((100% / 6))

    &-eighth
        +transformerConstructor('width')
            width: calc(12.5%)

[class*="bubble"].#{$classPrefix}width, 
[class*="card"].#{$classPrefix}width, 
[class*="button"].#{$classPrefix}width, 
[class*="badge"].#{$classPrefix}width, 
[class*="pile"].#{$classPrefix}width, 
[class*="input"].#{$classPrefix}width,
[class*="table"].#{$classPrefix}width,
    &-full
        +transformerConstructor('width')
            width: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('width')
            width: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('width')
            width: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('width')
            width: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('width')
            width: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('width')
            width: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('width')
            width: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('width')
            width: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('width')
            width: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('width')
            width: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('width')
            width: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('width')
            width: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('width')
            width: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('width')
            width: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('width')
            width: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('width')
            width: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('width')
            width: calc(12.5% - (#{$basicMargin}*2))


.#{$classPrefix}max-width
    +transformerConstructor('maxWidth')
        max-width: $standardSize * 4

    &-xxs
        +transformerConstructor('maxWidth')
            max-width: $xxs * 4

    &-xs
        +transformerConstructor('maxWidth')
            max-width: $xs * 4

    &-sm
        +transformerConstructor('maxWidth')
            max-width: $sm * 4

    &-md
        +transformerConstructor('maxWidth')
            max-width: $md * 4

    &-lg
        +transformerConstructor('maxWidth')
            max-width: $lg * 4

    &-xl
        +transformerConstructor('maxWidth')
            max-width: $xl * 4

    &-xxl
        +transformerConstructor('maxWidth')
            max-width: $xxl * 4

    &-full
        +transformerConstructor('maxWidth')
            max-width: calc(100%)

    &-seven-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(87.5%)

    &-five-sixths
        +transformerConstructor('maxWidth')
            max-width: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(80%)

    &-three-quaters
        +transformerConstructor('maxWidth')
            max-width: calc(75%)

    &-two-thirds
        +transformerConstructor('maxWidth')
            max-width: calc(66%)

    &-five-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(62.5%)

    &-three-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(60%)

    &-half
        +transformerConstructor('maxWidth')
            max-width: calc(50%)

    &-three-sixths
        +transformerConstructor('maxWidth')
            max-width: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(40%)

    &-three-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(37.5%)

    &-third
        +transformerConstructor('maxWidth')
            max-width: calc((100% / 3))

    &-quater
        +transformerConstructor('maxWidth')
            max-width: calc(25%)

    &-fifth
        +transformerConstructor('maxWidth')
            max-width: calc(20%)

    &-sixth
        +transformerConstructor('maxWidth')
            max-width: calc((100% / 6))

    &-eighth
        +transformerConstructor('maxWidth')
            max-width: calc(12.5%)

[class*="bubble"].#{$classPrefix}max-width, 
[class*="card"].#{$classPrefix}max-width, 
[class*="button"].#{$classPrefix}max-width, 
[class*="badge"].#{$classPrefix}max-width, 
[class*="pile"].#{$classPrefix}max-width, 
[class*="input"].#{$classPrefix}max-width,
[class*="table"].#{$classPrefix}max-width,
    &-full
        +transformerConstructor('maxWidth')
            max-width: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('maxWidth')
            max-width: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('maxWidth')
            max-width: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('maxWidth')
            max-width: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('maxWidth')
            max-width: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('maxWidth')
            max-width: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('maxWidth')
            max-width: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('maxWidth')
            max-width: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('maxWidth')
            max-width: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('maxWidth')
            max-width: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('maxWidth')
            max-width: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('maxWidth')
            max-width: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('maxWidth')
            max-width: calc(12.5% - (#{$basicMargin}*2))


// Height

.#{$classPrefix}min-height
    +transformerConstructor('minHeight')
        min-height: $standardSize * 4

    &-xxs
        +transformerConstructor('minHeight')
            min-height: $xxs * 4

    &-xs
        +transformerConstructor('minHeight')
            min-height: $xs * 4

    &-sm
        +transformerConstructor('minHeight')
            min-height: $sm * 4

    &-md
        +transformerConstructor('minHeight')
            min-height: $md * 4

    &-lg
        +transformerConstructor('minHeight')
            min-height: $lg * 4

    &-xl
        +transformerConstructor('minHeight')
            min-height: $xl * 4

    &-xxl
        +transformerConstructor('minHeight')
            min-height: $xxl * 4

    &-full
        +transformerConstructor('minHeight')
            min-height: calc(100%)

    &-seven-eighths
        +transformerConstructor('minHeight')
            min-height: calc(87.5%)

    &-five-sixths
        +transformerConstructor('minHeight')
            min-height: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('minHeight')
            min-height: calc(80%)

    &-three-quaters
        +transformerConstructor('minHeight')
            min-height: calc(75%)

    &-two-thirds
        +transformerConstructor('minHeight')
            min-height: calc(66%)

    &-five-eighths
        +transformerConstructor('minHeight')
            min-height: calc(62.5%)

    &-three-fifths
        +transformerConstructor('minHeight')
            min-height: calc(60%)

    &-half
        +transformerConstructor('minHeight')
            min-height: calc(50%)

    &-three-sixths
        +transformerConstructor('minHeight')
            min-height: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('minHeight')
            min-height: calc(40%)

    &-three-eighths
        +transformerConstructor('minHeight')
            min-height: calc(37.5%)

    &-third
        +transformerConstructor('minHeight')
            min-height: calc((100% / 3))

    &-quater
        +transformerConstructor('minHeight')
            min-height: calc(25%)

    &-fifth
        +transformerConstructor('minHeight')
            min-height: calc(20%)

    &-sixth
        +transformerConstructor('minHeight')
            min-height: calc((100% / 6))

    &-eighth
        +transformerConstructor('minHeight')
            min-height: calc(12.5%)

[class*="bubble"].#{$classPrefix}min-height, 
[class*="card"].#{$classPrefix}min-height, 
[class*="button"].#{$classPrefix}min-height, 
[class*="badge"].#{$classPrefix}min-height, 
[class*="pile"].#{$classPrefix}min-height, 
[class*="input"].#{$classPrefix}min-height,
[class*="table"].#{$classPrefix}min-height,
    &-full
        +transformerConstructor('minHeight')
            min-height: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('minHeight')
            min-height: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('minHeight')
            min-height: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('minHeight')
            min-height: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('minHeight')
            min-height: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('minHeight')
            min-height: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('minHeight')
            min-height: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('minHeight')
            min-height: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('minHeight')
            min-height: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('minHeight')
            min-height: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('minHeight')
            min-height: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('minHeight')
            min-height: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('minHeight')
            min-height: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('minHeight')
            min-height: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('minHeight')
            min-height: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('minHeight')
            min-height: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('minHeight')
            min-height: calc(12.5% - (#{$basicMargin}*2))


.#{$classPrefix}height
    +transformerConstructor('height')
        height: $standardSize * 4

    &-xxs
        +transformerConstructor('height')
            height: $xxs * 4

    &-xs
        +transformerConstructor('height')
            height: $xs * 4

    &-sm
        +transformerConstructor('height')
            height: $sm * 4

    &-md
        +transformerConstructor('height')
            height: $md * 4

    &-lg
        +transformerConstructor('height')
            height: $lg * 4

    &-xl
        +transformerConstructor('height')
            height: $xl * 4

    &-xxl
        +transformerConstructor('height')
            height: $xxl * 4

    &-full
        +transformerConstructor('height')
            height: calc(100%)

    &-seven-eighths
        +transformerConstructor('height')
            height: calc(87.5%)

    &-five-sixths
        +transformerConstructor('height')
            height: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('height')
            height: calc(80%)

    &-three-quaters
        +transformerConstructor('height')
            height: calc(75%)

    &-two-thirds
        +transformerConstructor('height')
            height: calc(66%)

    &-five-eighths
        +transformerConstructor('height')
            height: calc(62.5%)

    &-three-fifths
        +transformerConstructor('height')
            height: calc(60%)

    &-half
        +transformerConstructor('height')
            height: calc(50%)

    &-three-sixths
        +transformerConstructor('height')
            height: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('height')
            height: calc(40%)

    &-three-eighths
        +transformerConstructor('height')
            height: calc(37.5%)

    &-third
        +transformerConstructor('height')
            height: calc((100% / 3))

    &-quater
        +transformerConstructor('height')
            height: calc(25%)

    &-fifth
        +transformerConstructor('height')
            height: calc(20%)

    &-sixth
        +transformerConstructor('height')
            height: calc((100% / 6))

    &-eighth
        +transformerConstructor('height')
            height: calc(12.5%)

[class*="bubble"].#{$classPrefix}height, 
[class*="card"].#{$classPrefix}height, 
[class*="button"].#{$classPrefix}height, 
[class*="badge"].#{$classPrefix}height, 
[class*="pile"].#{$classPrefix}height, 
[class*="input"].#{$classPrefix}height,
[class*="table"].#{$classPrefix}height,
    &-full
        +transformerConstructor('height')
            height: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('height')
            height: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('height')
            height: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('height')
            height: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('height')
            height: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('height')
            height: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('height')
            height: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('height')
            height: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('height')
            height: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('height')
            height: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('height')
            height: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('height')
            height: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('height')
            height: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('height')
            height: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('height')
            height: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('height')
            height: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('height')
            height: calc(12.5% - (#{$basicMargin}*2))


.#{$classPrefix}max-height
    +transformerConstructor('maxHeight')
        max-height: $standardSize * 4

    &-xxs
        +transformerConstructor('maxHeight')
            max-height: $xxs * 4

    &-xs
        +transformerConstructor('maxHeight')
            max-height: $xs * 4

    &-sm
        +transformerConstructor('maxHeight')
            max-height: $sm * 4

    &-md
        +transformerConstructor('maxHeight')
            max-height: $md * 4

    &-lg
        +transformerConstructor('maxHeight')
            max-height: $lg * 4

    &-xl 
        +transformerConstructor('maxHeight')
            max-height: $xl * 4

    &-xxl
        +transformerConstructor('maxHeight')
            max-height: $xxl * 4

    &-full
        +transformerConstructor('maxHeight')
            max-height: calc(100%)

    &-seven-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(87.5%)

    &-five-sixths
        +transformerConstructor('maxHeight')
            max-height: calc(((100% / 6) * 5))

    &-four-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(80%)

    &-three-quaters
        +transformerConstructor('maxHeight')
            max-height: calc(75%)

    &-two-thirds
        +transformerConstructor('maxHeight')
            max-height: calc(66%)

    &-five-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(62.5%)

    &-three-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(60%)

    &-half
        +transformerConstructor('maxHeight')
            max-height: calc(50%)

    &-three-sixths
        +transformerConstructor('maxHeight')
            max-height: calc(((100% / 6) * 3))

    &-two-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(40%)

    &-three-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(37.5%)

    &-third
        +transformerConstructor('maxHeight')
            max-height: calc((100% / 3))

    &-quater
        +transformerConstructor('maxHeight')
            max-height: calc(25%)

    &-fifth
        +transformerConstructor('maxHeight')
            max-height: calc(20%)

    &-sixth
        +transformerConstructor('maxHeight')
            max-height: calc((100% / 6))

    &-eighth
        +transformerConstructor('maxHeight')
            max-height: calc(12.5%)

[class*="bubble"].#{$classPrefix}max-height, 
[class*="card"].#{$classPrefix}max-height, 
[class*="button"].#{$classPrefix}max-height, 
[class*="badge"].#{$classPrefix}max-height, 
[class*="pile"].#{$classPrefix}max-height, 
[class*="input"].#{$classPrefix}max-height,
[class*="table"].#{$classPrefix}max-height,
    &-full
        +transformerConstructor('maxHeight')
            max-height: calc(100% - (#{$basicMargin}*2))

    &-seven-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(87.5% - (#{$basicMargin}*2))

    &-five-sixths
        +transformerConstructor('maxHeight')
            max-height: calc(((100% / 6) * 5) - (#{$basicMargin}*2))

    &-four-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(80% - (#{$basicMargin}*2))

    &-three-quaters
        +transformerConstructor('maxHeight')
            max-height: calc(75% - (#{$basicMargin}*2))

    &-two-thirds
        +transformerConstructor('maxHeight')
            max-height: calc(66% - (#{$basicMargin}*2))

    &-five-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(62.5% - (#{$basicMargin}*2))

    &-three-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(60% - (#{$basicMargin}*2))

    &-half
        +transformerConstructor('maxHeight')
            max-height: calc(50% - (#{$basicMargin}*2))

    &-three-sixths
        +transformerConstructor('maxHeight')
            max-height: calc(((100% / 6) * 3) - (#{$basicMargin}*2))

    &-two-fifths
        +transformerConstructor('maxHeight')
            max-height: calc(40% - (#{$basicMargin}*2))

    &-three-eighths
        +transformerConstructor('maxHeight')
            max-height: calc(37.5% - (#{$basicMargin}*2))

    &-third
        +transformerConstructor('maxHeight')
            max-height: calc((100% / 3) - (#{$basicMargin}*2))

    &-quater
        +transformerConstructor('maxHeight')
            max-height: calc(25% - (#{$basicMargin}*2))

    &-fifth
        +transformerConstructor('maxHeight')
            max-height: calc(20% - (#{$basicMargin}*2))

    &-sixth
        +transformerConstructor('maxHeight')
            max-height: calc((100% / 6) - (#{$basicMargin}*2))

    &-eighth
        +transformerConstructor('maxHeight')
            max-height: calc(12.5% - (#{$basicMargin}*2))


// Background

.#{$classPrefix}bg, [class*="frame"] .#{$classPrefix}bg
    
    &-none 
        +transformerConstructor('background') 
            background-color: transparent

.#{$classPrefix}bg
    +colors('background', 'background-color')

+colorsThemed('background', '#{$classPrefix}bg')

.#{$classPrefix}bg
    +colorsThemeModes('background', 'background-color')

// Border

.#{$classPrefix}border, [class*="frame"] .#{$classPrefix}border
    +transformerConstructor('border')
        border: 1px solid $colorGrey

    &-horizontal
        +transformerConstructor('border')
            border-top: 1px solid $colorGrey
            border-bottom: 1px solid $colorGrey

    &-vertical
        +transformerConstructor('border')
            border-left: 1px solid $colorGrey
            border-right: 1px solid $colorGrey

    &-top
        +transformerConstructor('border')
            border-top: 1px solid $colorGrey

    &-left
        +transformerConstructor('border')
            border-left: 1px solid $colorGrey

    &-right
        +transformerConstructor('border')
            border-right: 1px solid $colorGrey

    &-bottom
        +transformerConstructor('border')
            border-bottom: 1px solid $colorGrey

    &-none
        +transformerConstructor('border')
            border: none
        
.#{$classPrefix}border
    +colors('border', 'border-color')

+colorsThemed('border', '#{$classPrefix}border')

.#{$classPrefix}border
    +colorsThemeModes('border', 'border-color')


// Roundness

.#{$classPrefix}roundness
    +transformerConstructor('roundness')
        border-radius: $standardSize

    &-xxs
        +transformerConstructor('roundness')
            border-radius: $xxs 

    &-xs
        +transformerConstructor('roundness')
            border-radius: $xs

    &-sm
        +transformerConstructor('roundness')
            border-radius: $sm

    &-md
        +transformerConstructor('roundness')
            border-radius: $md

    &-lg
        +transformerConstructor('roundness')
            border-radius: $lg

    &-xl
        +transformerConstructor('roundness')
            border-radius: $xl

    &-xxl
        +transformerConstructor('roundness')
            border-radius: $xxl

    &-full
        +transformerConstructor('roundness')
            border-radius: 1000px

    &-top
        +transformerConstructor('roundness')
            border-radius: $standardSize $standardSize 0 0 

        &-xxs
            +transformerConstructor('roundness')
                border-radius: $xxs $xxs 0 0 

        &-xs
            +transformerConstructor('roundness')
                border-radius: $xs $xs 0 0

        &-sm
            +transformerConstructor('roundness')
                border-radius: $sm $sm 0 0

        &-md
            +transformerConstructor('roundness')
                border-radius: $md $md 0 0

        &-lg
            +transformerConstructor('roundness')
                border-radius: $lg $lg 0 0

        &-xl
            +transformerConstructor('roundness')
                border-radius: $xl $xl 0 0

        &-xxl
            +transformerConstructor('roundness')
                border-radius: $xxl $xxl 0 0

        &-full
            +transformerConstructor('roundness')
                border-radius: 1000px 1000px 0 0

        &-none
            border-top-left-radius: 0
            border-top-right-radius: 0

    &-left
        +transformerConstructor('roundness')
            border-radius: $standardSize 0 0 0 

        &-xxs
            +transformerConstructor('roundness')
                border-radius: $xxs 0 0 0 

        &-xs
            +transformerConstructor('roundness')
                border-radius: $xs 0 0 0

        &-sm
            +transformerConstructor('roundness')
                border-radius: $sm 0 0 0

        &-md
            +transformerConstructor('roundness')
                border-radius: $md 0 0 0

        &-lg
            +transformerConstructor('roundness')
                border-radius: $lg 0 0 0

        &-xl
            +transformerConstructor('roundness')
                border-radius: $xl 0 0 0

        &-xxl
            +transformerConstructor('roundness')
                border-radius: $xxl 0 0 0

        &-full
            border-radius: 1000px 0 0 0

        &-none
            border-top-left-radius: 0
    
    &-right
        +transformerConstructor('roundness')
            border-radius: 0 $standardSize 0 0 

        &-xxs
            +transformerConstructor('roundness')
                border-radius: 0 $xxs 0 0

        &-xs
            +transformerConstructor('roundness')
                border-radius: 0 $xs 0 0

        &-sm
            +transformerConstructor('roundness')
                border-radius: 0 $sm 0 0

        &-md
            +transformerConstructor('roundness')
                border-radius: 0 $md 0 0

        &-lg
            +transformerConstructor('roundness')
                border-radius: 0 $lg 0 0

        &-xl
            +transformerConstructor('roundness')
                border-radius: 0 $xl 0 0

        &-xxl
            +transformerConstructor('roundness')
                border-radius: 0 $xxl 0 0

        &-full
            +transformerConstructor('roundness')
                border-radius: 0 1000px 0 0

        &-none
            border-top-right-radius: 0

    &-bottom
        +transformerConstructor('roundness')
            border-radius: 0 0 $standardSize $standardSize 

        &-xxs
            +transformerConstructor('roundness')
                border-radius: 0 0 $xxs $xxs

        &-xs
            +transformerConstructor('roundness')
                border-radius: 0 0 $xs $xs 

        &-sm
            +transformerConstructor('roundness')
                border-radius: 0 0 $sm $sm

        &-md
            +transformerConstructor('roundness')
                border-radius: 0 0 $md $md

        &-lg
            +transformerConstructor('roundness')
                border-radius: 0 0 $lg $lg 

        &-xl
            +transformerConstructor('roundness')
                border-radius: 0 0 $xl $xl 

        &-xxl
            +transformerConstructor('roundness')
                border-radius: 0 0 $xxl $xxl

        &-full
            +transformerConstructor('roundness')
                border-radius: 0 0 1000px 1000px

        &-none
            border-bottom-left-radius: 0 
            border-bottom-right-radius: 0

    &-none
        border-radius: 0


// Text        

.#{$classPrefix}text, [class*="frame"] .#{$classPrefix}text
    +transformerConstructor('text')
        font-size: $fontSizeMD

    &-xxs
        +transformerConstructor('text')
            font-size: $fontSizeXXS

    &-xs
        +transformerConstructor('text')
            font-size: $fontSizeXS

    &-sm
        +transformerConstructor('text')
            font-size: $fontSizeSM

    &-md
        +transformerConstructor('text')
            font-size: $fontSizeMD

    &-lg
        +transformerConstructor('text')
            font-size: $fontSizeLG

    &-xl
        +transformerConstructor('text')
            font-size: $fontSizeXL

    &-xxl
        +transformerConstructor('text')
            font-size: $fontSizeXXL

    &-light
        +transformerConstructor('text')
            font-weight: $fontWeightLight

    &-regular
        +transformerConstructor('text')
            font-weight: $fontWeightRegular

    &-medium
        +transformerConstructor('text')
            font-weight: $fontWeightMedium

    &-bold
        +transformerConstructor('text')
            font-weight: $fontWeightBold

    &-bolder
        +transformerConstructor('text')
            font-weight: $fontWeightBlack

    &-italic
        +transformerConstructor('text')
            font-style: italic

    &-uppercase
        +transformerConstructor('text')
            text-transform: uppercase

    &-ellipsis
        +transformerConstructor('text')
            white-space: nowrap
            overflow: hidden
            text-overflow: ellipsis

    &-link
        +transformerConstructor('text')
            color: $linkColor
            cursor: pointer

            &:hover 
                color: $linkHoverColor

    &-nowrap
        white-space: nowrap

    &-left
        +transformerConstructor('text')
            text-align: left

    &-center
        +transformerConstructor('text')
            text-align: center
        
    &-right
        +transformerConstructor('text')
            text-align: right

    &-none
        +transformerConstructor('text')
            color: transparent

.#{$classPrefix}text
    +colors('text', 'color')

+colorsThemed('text', '#{$classPrefix}text')

.#{$classPrefix}text
    +colorsThemeModes('text', 'color')


// Margin

.#{$classPrefix}m, .#{$classPrefix}margin
    +transformerConstructor('margin')
        +margin($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +margin($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +margin($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +margin($sm)

    &-md
        +transformerConstructor('margin')
            +margin($md)

    &-lg
        +transformerConstructor('margin')
            +margin($lg)

    &-xl
        +transformerConstructor('margin')
            +margin($xl)

    &-xxl
        +transformerConstructor('margin')
            +margin($xxl)

    &-none
        +transformerConstructor('margin')
            +margin(0)

    &-balance
        +transformerConstructor('margin')
            +marginBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginBalance($xxl)

.#{$classPrefix}mh, .#{$classPrefix}margin-horizontal
    +transformerConstructor('margin')
        +marginX($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginX($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginX($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginX($sm)

    &-md
        +transformerConstructor('margin')
            +marginX($md)

    &-lg
        +transformerConstructor('margin')
            +marginX($lg)

    &-xl
        +transformerConstructor('margin')
            +marginX($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginX($xxl)

    &-none
        +transformerConstructor('margin')
            +marginX(0)

    &-balance
        +transformerConstructor('margin')
            +marginXBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginXBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginXBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginXBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginXBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginXBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginXBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginXBalance($xxl)
  
.#{$classPrefix}mv, .#{$classPrefix}margin-vertical
    +transformerConstructor('margin')
        +marginY($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginY($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginY($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginY($sm)

    &-md
        +transformerConstructor('margin')
            +marginY($md)

    &-lg
        +transformerConstructor('margin')
            +marginY($lg)

    &-xl
        +transformerConstructor('margin')
            +marginY($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginY($xxl)

    &-none
        +transformerConstructor('margin')
            +marginY(0)

    &-balance
        +transformerConstructor('margin')
            +marginYBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginYBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginYBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginYBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginYBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginYBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginYBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginYBalance($xxl)

.#{$classPrefix}mt, .#{$classPrefix}margin-top
    +transformerConstructor('margin')
        +marginTop($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginTop($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginTop($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginTop($sm)

    &-md
        +transformerConstructor('margin')
            +marginTop($md)

    &-lg
        +transformerConstructor('margin')
            +marginTop($lg)

    &-xl
        +transformerConstructor('margin')
            +marginTop($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginTop($xxl)

    &-none
        +transformerConstructor('margin')
            +marginTop(0)

    &-balance
        +transformerConstructor('margin')
            +marginTopBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginTopBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginTopBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginTopBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginTopBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginTopBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginTopBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginTopBalance($xxl)

.#{$classPrefix}ml, .#{$classPrefix}margin-left
    +transformerConstructor('margin')
        +marginLeft($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginLeft($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginLeft($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginLeft($sm)

    &-md
        +transformerConstructor('margin')
            +marginLeft($md)

    &-lg
        +transformerConstructor('margin')
            +marginLeft($lg)

    &-xl
        +transformerConstructor('margin')
            +marginLeft($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginLeft($xxl)

    &-none
        +transformerConstructor('margin')
            +marginLeft(0)

    &-balance
        +transformerConstructor('margin')
            +marginLeftBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginLeftBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginLeftBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginLeftBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginLeftBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginLeftBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginLeftBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginLeftBalance($xxl)


.#{$classPrefix}mr, .#{$classPrefix}margin-right
    +transformerConstructor('margin')
        +marginRight($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginRight($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginRight($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginRight($sm)

    &-md
        +transformerConstructor('margin')
            +marginRight($md)

    &-lg
        +transformerConstructor('margin')
            +marginRight($lg)

    &-xl
        +transformerConstructor('margin')
            +marginRight($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginRight($xxl)

    &-none
        +transformerConstructor('margin')
            +marginRight(0)

    &-balance
        +transformerConstructor('margin')
            +marginRightBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginRightBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginRightBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginRightBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginRightBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginRightBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginRightBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginRightBalance($xxl)

.#{$classPrefix}mb, .#{$classPrefix}margin-bottom
    +transformerConstructor('margin')
        +marginBottom($standardSize)

    &-xxs
        +transformerConstructor('margin')
            +marginBottom($xxs / 2)

    &-xs
        +transformerConstructor('margin')
            +marginBottom($xs * (2 / 3))

    &-sm
        +transformerConstructor('margin')
            +marginBottom($sm)

    &-md
        +transformerConstructor('margin')
            +marginBottom($md)

    &-lg
        +transformerConstructor('margin')
            +marginBottom($lg)

    &-xl
        +transformerConstructor('margin')
            +marginBottom($xl)

    &-xxl
        +transformerConstructor('margin')
            +marginBottom($xxl)

    &-none
        +transformerConstructor('margin')
            +marginBottom(0)

    &-balance
        +transformerConstructor('margin')
            +marginBottomBalance($standardSize)

        &-xxs
            +transformerConstructor('margin')
                +marginBottomBalance($xxs / 2)

        &-xs
            +transformerConstructor('margin')
                +marginBottomBalance($xs * (2 / 3))

        &-sm
            +transformerConstructor('margin')
                +marginBottomBalance($sm)

        &-md
            +transformerConstructor('margin')
                +marginBottomBalance($md)

        &-lg
            +transformerConstructor('margin')
                +marginBottomBalance($lg)

        &-xl
            +transformerConstructor('margin')
                +marginBottomBalance($xl)

        &-xxl
            +transformerConstructor('margin')
                +marginBottomBalance($xxl)


// Padding

.#{$classPrefix}p, .#{$classPrefix}padding
    +transformerConstructor('padding')
        +padding($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +padding($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +padding($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +padding($sm)

    &-md
        +transformerConstructor('padding')
            +padding($md)

    &-lg
        +transformerConstructor('padding')
            +padding($lg)

    &-xl
        +transformerConstructor('padding')
            +padding($xl)

    &-xxl
        +transformerConstructor('padding')
            +padding($xxl)

    &-none
        +transformerConstructor('padding')
            +padding(0)

.#{$classPrefix}ph, .#{$classPrefix}padding-horizontal
    +transformerConstructor('padding')
        +paddingX($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingX($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingX($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +paddingX($sm)

    &-md
        +transformerConstructor('padding')
            +paddingX($md)

    &-lg
        +transformerConstructor('padding')
            +paddingX($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingX($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingX($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingX(0)
  
.#{$classPrefix}pv, .#{$classPrefix}padding-vertical
    +transformerConstructor('padding')
        +paddingY($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingY($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingY($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +paddingY($sm)

    &-md
        +transformerConstructor('padding')
            +paddingY($md)

    &-lg
        +transformerConstructor('padding')
            +paddingY($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingY($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingY($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingY(0)

.#{$classPrefix}pt, .#{$classPrefix}padding-top
    +transformerConstructor('padding')
        +paddingTop($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingTop($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingTop($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +paddingTop($sm)

    &-md
        +transformerConstructor('padding')
            +paddingTop($md)

    &-lg
        +transformerConstructor('padding')
            +paddingTop($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingTop($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingTop($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingTop(0)

.#{$classPrefix}pl, .#{$classPrefix}padding-left
    +transformerConstructor('padding')
        +paddingLeft($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingLeft($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingLeft($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +paddingLeft($sm)

    &-md
        +transformerConstructor('padding')
            +paddingLeft($md)

    &-lg
        +transformerConstructor('padding')
            +paddingLeft($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingLeft($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingLeft($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingLeft(0)

.#{$classPrefix}pr, .#{$classPrefix}padding-right
    +transformerConstructor('padding')
        +paddingRight($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingRight($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingRight($xs * (2 / 3))

    &-sm
        +transformerConstructor('padding')
            +paddingRight($sm)

    &-md
        +transformerConstructor('padding')
            +paddingRight($md)

    &-lg
        +transformerConstructor('padding')
            +paddingRight($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingRight($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingRight($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingRight(0)

.#{$classPrefix}pb, .#{$classPrefix}padding-bottom
    +transformerConstructor('padding')
        +paddingBottom($standardSize)

    &-xxs
        +transformerConstructor('padding')
            +paddingBottom($xxs / 2)

    &-xs
        +transformerConstructor('padding')
            +paddingBottom($xs)

    &-sm
        +transformerConstructor('padding')
            +paddingBottom($sm)

    &-md
        +transformerConstructor('padding')
            +paddingBottom($md)

    &-lg
        +transformerConstructor('padding')
            +paddingBottom($lg)

    &-xl
        +transformerConstructor('padding')
            +paddingBottom($xl)

    &-xxl
        +transformerConstructor('padding')
            +paddingBottom($xxl)

    &-none
        +transformerConstructor('padding')
            +paddingBottom(0)


// Overflow

.#{$classPrefix}overflow
    &-scroll
        +transformerConstructor('overflow')
            overflow: scroll

    &-hidden
        +transformerConstructor('overflow')
            overflow: hidden

    &-auto
        +transformerConstructor('overflow')
            overflow: auto

    &-y-hidden
        +transformerConstructor('overflow')
            overflow-y: hidden

    &-y-scroll
        +transformerConstructor('overflow')
            overflow-y: scroll

    &-y-auto
        +transformerConstructor('overflow')
            overflow-y: auto

    &-x-hidden
        +transformerConstructor('overflow')
            overflow-x: hidden

    &-x-scroll
        +transformerConstructor('overflow')
            overflow-x: scroll 

    &-x-auto
        +transformerConstructor('overflow')
            overflow-x: auto


// Opacity

.#{$classPrefix}invisible
    opacity: 0


// Display

.#{$classPrefix}block   
    +transformerConstructor('display')
        display: block

.#{$classPrefix}inline-block   
    +transformerConstructor('display')
        display: inline-block

.#{$classPrefix}inline   
    +transformerConstructor('display')
        display: inline

.#{$classPrefix}flex   
    +transformerConstructor('display')
        display: flex

.#{$classPrefix}inline-flex
    +transformerConstructor('display')
        display: inline-flex

.#{$classPrefix}hidden   
    +transformerConstructor('display')
        display: hidden


// Index

.#{$classPrefix}index // check

    &-1
        +transformerConstructor('index')
            z-index: 1

    &-2
        +transformerConstructor('index')
            z-index: 2

    &-3
        +transformerConstructor('index')
            z-index: 3

    &-4
        +transformerConstructor('index')
            z-index: 4

    &-5
        +transformerConstructor('index')
            z-index: 5

    &-6
        +transformerConstructor('index')
            z-index: 6

    &-7
        +transformerConstructor('index')
            z-index: 7

    &-8
        +transformerConstructor('index')
            z-index: 8

    &-9
        +transformerConstructor('index')
            z-index: 9

    &-10
        +transformerConstructor('index')
            z-index: 10

    &-11
        +transformerConstructor('index')
            z-index: 11

    &-12
        +transformerConstructor('index')
            z-index: 12

    &-13
        +transformerConstructor('index')
            z-index: 13

    &-14
        +transformerConstructor('index')
            z-index: 14

    &-15
        +transformerConstructor('index')
            z-index: 15

    &-16
        +transformerConstructor('index')
            z-index: 16

    &-17
        +transformerConstructor('index')
            z-index: 17

    &-18
        +transformerConstructor('index')
            z-index: 18

    &-19
        +transformerConstructor('index')
            z-index: 19

    &-20
        +transformerConstructor('index')
            z-index: 20


// Disabled

.#{$classPrefix}disabled
    +transformerConstructor('disabled')
        background-color: $colorLightGrey !important
        border-color: $colorLightGrey !important
        color: $colorDarkGrey !important
        pointer-events: none

        &::placeholder
            color: $colorDarkGrey !important 


// Click

.#{$classPrefix}click
    +transformerConstructor('click')
        cursor: pointer


// No Link

.#{$classPrefix}no-link
    +transformerConstructor('noLink')
        color: $colorBlack
        text-decoration: none
        pointer-events: none

        &-style
            color: $colorBlack
            text-decoration: none