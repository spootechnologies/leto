@import '_variables.sass'
@import '_elements-variables.sass'
@import '_white-lists.sass'
@import '_theme-functions.scss'


// Elements base mixins
    
=basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius, $outlineWidth, $outlineColor, $outlineOffset, $outlineStyle, $boxShadow)
    border-width: $borderWidth
    border-style: solid
    border-radius: $borderRadius
    outline-width: $outlineWidth
    outline-offset: $outlineOffset
    outline-style: $outlineStyle
    box-shadow: $boxShadow

    @if $bgColor != $lightModeBgColor
        background: $bgColor 

    @if $color != $lightModeColor
        color: $color

    @if $borderColor != $lightModeColor
        border-color: $borderColor

    @if $outlineColor != $lightModeColor
        outline-color: $outlineColor

=basicElementColors($bgColor, $color, $borderColor, $outlineColor) 
    background: $bgColor 
    color: $color
    border-color: $borderColor
    outline-color: $outlineColor

=elementThemeColors($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderColor: getElementAttrVal($elementName, 'borderColor');
    $outlineColor: getElementAttrVal($elementName, 'outlineColor');

    @if $bgColor == $lightModeBgColor
        +themed() 
            background: t('bg')
    @else 
        +themedColor($bgColor, 'background')

    @if $color == $lightModeColor 
        +themed() 
            color: t('color')
    @else 
        +themedColor($color, 'color')

    @if $borderColor == $lightModeColor
        +themed() 
            border-color: t('color')
    @else 
        +themedColor($borderColor, 'border-color')

    @if $outlineColor == $lightModeColor
        +themed() 
            outline-color: t('color')
    @else 
        +themedColor($outlineColor, 'outline-color') 

// Presets

=preset($bgColor, $color, $borderWidth, $borderColor, $borderRadius, $outlineColor)
    +basicElementColors($bgColor, $color, $borderColor, $outlineColor)
    
    @media (min-width: $tablet)

        &-tablet
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

    @media (min-width: $tabletAndPC)

        &-tablet-pc
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

    @media (min-width: $tabletAndPC) and ($touchDevice)

        &-tablet-pc
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

    @media (min-width: $pc)

        &-pc
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

    @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

        &-ultrawide
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

    @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
        
        &-super-ultrawide
            +basicElementColors($bgColor, $color, $borderColor, $outlineColor)

=presetConstructor($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderWidth: getElementAttrVal($elementName, 'borderWidth');
    $borderColor: getElementAttrVal($elementName, 'borderColor');
    $borderRadius: getElementAttrVal($elementName, 'borderRadius');
    $outlineColor: getElementAttrVal($elementName, 'outlineColor');

    @if checkElementPresetsList($elementName)
        &-white
            +preset(transparent, $colorWhite, $borderWidth, $colorWhite, $borderRadius, $outlineColor)

        &-dark-white
            +preset(transparent, $colorDarkWhite, $borderWidth, $colorDarkWhite, $borderRadius, $outlineColor)

        &-grey
            +preset(transparent, $colorGrey, $borderWidth, $colorGrey, $borderRadius, $outlineColor)

        &-light-grey
            +preset(transparent, $colorLightGrey, $borderWidth, $colorLightGrey, $borderRadius, $outlineColor)

        &-lighter-grey
            +preset(transparent, $colorLighterGrey, $borderWidth, $colorLighterGrey, $borderRadius, $outlineColor)

        &-dark-grey
            +preset(transparent, $colorDarkGrey, $borderWidth, $colorDarkGrey, $borderRadius, $outlineColor)

        &-darker-grey
            +preset(transparent, $colorDarkerGrey, $borderWidth, $colorDarkerGrey, $borderRadius, $outlineColor)

        &-yellow
            +preset(transparent, $colorYellow, $borderWidth, $colorYellow, $borderRadius, $outlineColor)

        &-light-yellow
            +preset(transparent, $colorLightYellow, $borderWidth, $colorLightYellow, $borderRadius, $outlineColor)

        &-dark-yellow
            +preset(transparent, $colorDarkYellow, $borderWidth, $colorDarkYellow, $borderRadius, $outlineColor)

        &-orange
            +preset(transparent, $colorOrange, $borderWidth, $colorOrange, $borderRadius, $outlineColor)

        &-light-orange
            +preset(transparent, $colorLightOrange, $borderWidth, $colorLightOrange, $borderRadius, $outlineColor)

        &-dark-orange
            +preset(transparent, $colorDarkOrange, $borderWidth, $colorDarkOrange, $borderRadius, $outlineColor)

        &-red
            +preset(transparent, $colorRed, $borderWidth, $colorRed, $borderRadius, $outlineColor)

        &-light-red
            +preset(transparent, $colorLightRed, $borderWidth, $colorLightRed, $borderRadius, $outlineColor)

        &-dark-red
            +preset(transparent, $colorDarkRed, $borderWidth, $colorDarkRed, $borderRadius, $outlineColor)

        &-purple
            +preset(transparent, $colorPurple, $borderWidth, $colorPurple, $borderRadius, $outlineColor)

        &-light-purple
            +preset(transparent, $colorLightPurple, $borderWidth, $colorLightPurple, $borderRadius, $outlineColor)

        &-dark-purple
            +preset(transparent, $colorDarkPurple, $borderWidth, $colorDarkPurple, $borderRadius, $outlineColor)

        &-blue
            +preset(transparent, $colorBlue, $borderWidth, $colorBlue, $borderRadius, $outlineColor)           

        &-light-blue
            +preset(transparent, $colorLightBlue, $borderWidth, $colorLightBlue, $borderRadius, $outlineColor)          

        &-dark-blue
            +preset(transparent, $colorDarkBlue, $borderWidth, $colorDarkBlue, $borderRadius, $outlineColor)           

        &-mint
            +preset(transparent, $colorMint, $borderWidth, $colorMint, $borderRadius, $outlineColor)          

        &-light-mint
            +preset(transparent, $colorLightMint, $borderWidth, $colorLightMint, $borderRadius, $outlineColor)          

        &-dark-mint
            +preset(transparent, $colorDarkMint, $borderWidth, $colorDarkMint, $borderRadius, $outlineColor)
                
        &-mint
            +preset(transparent, $colorGreen, $borderWidth, $colorGreen, $borderRadius, $outlineColor)
                
        &-light-mint
            +preset(transparent, $colorLightGreen, $borderWidth, $colorLightGreen, $borderRadius, $outlineColor)
                
        &-dark-mint
            +preset(transparent, $colorDarkGreen, $borderWidth, $colorDarkGreen, $borderRadius, $outlineColor)
            

// Element constructor

=elementConstructor($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderWidth: getElementAttrVal($elementName, 'borderWidth');
    $borderColor: getElementAttrVal($elementName, 'borderColor');
    $borderRadius: getElementAttrVal($elementName, 'borderRadius');
    $outlineWidth: getElementAttrVal($elementName, 'outlineWidth');
    $outlineColor: getElementAttrVal($elementName, 'outlineColor');
    $outlineOffset: getElementAttrVal($elementName, 'outlineOffset');
    $outlineStyle: getElementAttrVal($elementName, 'outlineStyle');
    $boxShadow: getElementAttrVal($elementName, 'boxShadow');

    &, &-tablet, &-tablet-pc, &-pc, &-ultrawide, &-super-ultrawide
        @content
        +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius, $outlineWidth, $outlineColor, $outlineOffset, $outlineStyle, $boxShadow)

=elementConstructorDy($elementName)
    @content
    
    @if checkElementMQList($elementName)
        @media (min-width: $tablet)

            &-tablet
                @content

        @media (min-width: $tabletAndPC)

            &-tablet-pc
                @content

        @media (min-width: $tabletAndPC) and ($touchDevice)

            &-tablet-pc
                @content

        @media (min-width: $pc)

            &-pc
                @content

        @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

            &-ultrawide
                @content

        @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
            
            &-super-ultrawide
                @content

=elementInputConstructor($elementName)
    $realElementName: ''

    @if $elementName != 'color'
        $realElementName: $elementName
    
    @else 
        $realElementName: 'input'

    $bgColor: getElementAttrVal($realElementName, 'bg')
    $color: getElementAttrVal($realElementName, 'color')
    $borderWidth: getElementAttrVal($realElementName, 'borderWidth')
    $borderColor: getElementAttrVal($realElementName, 'borderColor')
    $borderRadius: getElementAttrVal($realElementName, 'borderRadius')
    $outlineWidth: getElementAttrVal($realElementName, 'outlineWidth');
    $outlineColor: getElementAttrVal($realElementName, 'outlineColor');
    $outlineOffset: getElementAttrVal($realElementName, 'outlineOffset');
    $outlineStyle: getElementAttrVal($realElementName, 'outlineStyle');
    $boxShadow: getElementAttrVal($realElementName, 'boxShadow');

    @if $elementName != 'input'
        &[type="#{$elementName}"], &-tablet[type="#{$elementName}"], &-tablet-pc[type="#{$elementName}"], &-pc[type="#{$elementName}"], &-ultrawide[type="#{$elementName}"], &-super-ultrawide[type="#{$elementName}"]
            @content
            +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius, $outlineWidth, $outlineColor, $outlineOffset, $outlineStyle, $boxShadow)

    @else 
        &[type="text"], &-tablet[type="text"], &-tablet-pc[type="text"], &-pc[type="text"], &-ultrawide[type="text"], &-super-ultrawide[type="text"], 
        &[type="date"], &-tablet[type="date"], &-tablet-pc[type="date"], &-pc[type="date"], &-ultrawide[type="date"], &-super-ultrawide[type="date"],
        &[type="datetime-local"], &-tablet[type="datetime-local"], &-tablet-pc[type="datetime-local"], &-pc[type="datetime-local"], &-ultrawide[type="datetime-local"], &-super-ultrawide[type="datetime-local"],
        &[type="email"], &-tablet[type="email"], &-tablet-pc[type="email"], &-pc[type="email"], &-ultrawide[type="email"], &-super-ultrawide[type="email"],
        &[type="month"], &-tablet[type="month"], &-tablet-pc[type="month"], &-pc[type="month"], &-ultrawide[type="month"], &-super-ultrawide[type="month"], 
        &[type="number"], &-tablet[type="number"], &-tablet-pc[type="number"], &-pc[type="number"], &-ultrawide[type="number"], &-super-ultrawide[type="number"],
        &[type="password"], &-tablet[type="password"], &-tablet-pc[type="password"], &-pc[type="password"], &-ultrawide[type="password"], &-super-ultrawide[type="password"],
        &[type="tel"], &-tablet[type="tel"], &-tablet-pc[type="tel"], &-pc[type="tel"], &-ultrawide[type="tel"], &-super-ultrawide[type="tel"], 
        &[type="time"], &-tablet[type="time"], &-tablet-pc[type="time"], &-pc[type="time"], &-ultrawide[type="time"], &-super-ultrawide[type="time"],
        &[type="url"], &-tablet[type="url"], &-tablet-pc[type="url"], &-pc[type="url"], &-ultrawide[type="url"], &-super-ultrawide[type="url"], 
        &[type="week"], &-tablet[type="week"], &-tablet-pc[type="week"], &-pc[type="week"], &-ultrawide[type="week"], &-super-ultrawide[type="week"],
            @content
            +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius, $outlineWidth, $outlineColor, $outlineOffset, $outlineStyle, $boxShadow)

=elementInputConstructorDy($elementName)
    @if $elementName != 'input'
        &[type="#{$elementName}"]
            @content

    @else
        &[type="text"], &[type="date"], &[type="datetime-local"], &[type="email"], &[type="month"], &[type="number"], &[type="password"], &[type="tel"], &[type="time"], &[type="url"], &[type="week"]
            @content

    @if checkElementMQList($elementName)
        @if $elementName != 'input'

            @media (min-width: $tablet)

                &-tablet[type="#{$elementName}"]
                    @content

            @media (min-width: $tabletAndPC)

                &-tablet-pc[type="#{$elementName}"]
                    @content

            @media (min-width: $tabletAndPC) and ($touchDevice)

                &-tablet-pc[type="#{$elementName}"]
                    @content

            @media (min-width: $pc)

                &-pc[type="#{$elementName}"]
                    @content

            @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

                &-ultrawide[type="#{$elementName}"]
                    @content

            @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
                
                &-super-ultrawide[type="#{$elementName}"]
                    @content

        @else 

            @media (min-width: $tablet)

                &-tablet[type="text"], &-tablet[type="date"], &-tablet[type="datetime-local"], &-tablet[type="email"], &-tablet[type="month"], &-tablet[type="number"], &-tablet[type="password"], &-tablet[type="tel"], &-tablet[type="time"], &-tablet[type="url"], &-tablet[type="week"]
                    @content

            @media (min-width: $tabletAndPC)

                &-tablet-pc[type="text"], &-tablet-pc[type="date"], &-tablet-pc[type="datetime-local"], &-tablet-pc[type="email"], &-tablet-pc[type="month"], &-tablet-pc[type="number"], &-tablet-pc[type="password"], &-tablet-pc[type="tel"], &-tablet-pc[type="time"], &-tablet-pc[type="url"], &-tablet-pc[type="week"]
                    @content

            @media (min-width: $tabletAndPC) and ($touchDevice)

                &-tablet-pc[type="text"], &-tablet-pc[type="date"], &-tablet-pc[type="datetime-local"], &-tablet-pc[type="email"], &-tablet-pc[type="month"], &-tablet-pc[type="number"], &-tablet-pc[type="password"], &-tablet-pc[type="tel"], &-tablet-pc[type="time"], &-tablet-pc[type="url"], &-tablet-pc[type="week"]
                    @content

            @media (min-width: $pc)

                &-pc[type="text"], &-pc[type="date"], &-pc[type="datetime-local"], &-pc[type="email"], &-pc[type="month"], &-pc[type="number"], &-pc[type="password"], &-pc[type="tel"], &-pc[type="time"], &-pc[type="url"], &-pc[type="week"]
                    @content

            @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

                &-ultrawide[type="text"], &-ultrawide[type="date"], &-ultrawide[type="datetime-local"], &-ultrawide[type="email"], &-ultrawide[type="month"], &-ultrawide[type="number"], &-ultrawide[type="password"], &-ultrawide[type="tel"], &-ultrawide[type="time"], &-ultrawide[type="url"], &-ultrawide[type="week"]
                    @content

            @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
                
                &-super-ultrawide[type="text"], &-super-ultrawide[type="date"], &-super-ultrawide[type="datetime-local"], &-super-ultrawide[type="email"], &-super-ultrawide[type="month"], &-super-ultrawide[type="number"], &-super-ultrawide[type="password"], &-super-ultrawide[type="tel"], &-super-ultrawide[type="time"], &-super-ultrawide[type="url"], &-super-ultrawide[type="week"]
                    @content

// Elements mixins

// Bubble

=bubble()
    text-align: center
    margin: $basicMargin
    flex-direction: column
    align-items: center
    justify-content: center
    flex-shrink: 0
    display: inline-flex

=bubbleDy($value)
    $multiplier: getElementAttrVal('bubble', 'multiplier')
    height: $value * $multiplier
    width: $value * $multiplier
    font-size: $value * 0.75

    img
        max-width: $value * 0.75

    
// Bubble wrapper

=bubbleWrapper()
    margin: $basicMargin
    justify-content: center
    flex-direction: column
    display: inline-flex

    > [class*=bubble]
        margin-top: 0
        margin-left: auto
        margin-right: auto
        margin-bottom: 0

    > label
        text-align: center

    > [class*=bubble] ~ label
        margin-top: $basicMargin

    > label ~ [class*=bubble]
        margin-top: $basicMargin

=bubbleWrapperDy($value)
    $multiplier: getElementAttrVal('bubble', 'multiplier')
    width: $value * $multiplier

    > .#{$classPrefix}bubble
        height: $value * $multiplier
        width: $value * $multiplier
        font-size: $value * .75
        border-radius: $value * $multiplier

        img
            max-width: $value * .75 


// Card

=card()
    position: relative
    min-height: 50px
    border: 1px solid $colorGrey
    border-radius: 12px
    margin: $basicMargin
    padding: $basicPadding
    flex-direction: column
    display: inline-flex
    overflow: hidden

    > .#{$classPrefix}image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)

=cardDy($value)
    $multiplier: getElementAttrVal('card', 'multiplier')
    width: $value * $multiplier
    min-height: 50px

=cardAutoWidth()
    position: relative
    min-height: 50px
    margin: $basicMargin
    padding: $basicPadding
    flex-direction: column
    display: inline-flex
    overflow: hidden

    > .#{$classPrefix}image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)

=cardSquare()
    position: relative
    margin: $basicMargin
    flex-direction: column
    display: inline-flex
    overflow: hidden 

    > .#{$classPrefix}image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)

=cardSquareDy($value)
    $multiplier: getElementAttrVal('card', 'multiplier')
    width: $value * $multiplier
    height: $value * $multiplier


// Card wrapper

=cardWrapper()
    margin: $basicMargin
    justify-content: center
    flex-direction: column
    display: inline-flex

    > [class*=card]
        margin-top: 0
        margin-left: auto
        margin-right: auto
        margin-bottom: 0

    > label
        text-align: center

    > [class*=card] ~ label
        margin-top: $basicMargin

    > label ~ [class*=card]
        margin-top: $basicMargin   


// Button

=button()
    text-decoration: none
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2
    justify-content: center
    align-items: center
    cursor: pointer
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0

=buttonDy($value)
    $multiplier: getElementAttrVal('button', 'multiplier')
    height: $value * $multiplier


=buttonFull()
    width: 100%
    text-decoration: none
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2
    justify-content: center
    align-items: center
    cursor: pointer
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0

=buttonFullDy($value)
    $multiplier: getElementAttrVal('button', 'multiplier')
    height: $value * $multiplier


// Badge

=badge()
    font-size: $fontSizeXS
    padding: $xxs $xs
    margin: $basicMargin
    white-space: nowrap
    align-items: center
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0

=badgeDy($value)
    height: $value


// Input

=input()
    min-width: auto
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: 0 $basicPadding * 2

    &:focus
        background-color: $colorLightGrey
        border-color: $colorLightGrey

=inputDy($height)
    $multiplier: getElementAttrVal('input', 'multiplier')
    height: $height * $multiplier


// Input Wrapper

=inputWrapper()
    $bgColor: getElementAttrVal('input', 'bg');
    $borderColor: getElementAttrVal('input', 'borderColor');  

    position: relative
    width: fit-content
    margin: $basicMargin
    display: flex
    flex-direction: column

    label
        position: absolute
        font-size: $fontSizeSM
        font-weight: $fontWeightMedium
        top: 0
        right: 0
        bottom: 0
        left: 0
        display: flex

        &:before
            content: "" 
            width: 14px
            height: 100%
            border-top-left-radius: 12px
            border-bottom-left-radius: 12px
            border-top: 1px solid $borderColor
            border-bottom: 1px solid $borderColor
            border-left: 1px solid $borderColor 

            +themedColor($borderColor, 'border-color');

        &:after  
            content: ""
            flex: 8
            height: 100%
            border-top-right-radius: 12px
            border-bottom-right-radius: 12px
            border-top: 1px solid $borderColor
            border-right: 1px solid $borderColor
            border-bottom: 1px solid $borderColor

            +themedColor($borderColor, 'border-color');

    label > span
        margin-top: -10px
        padding: 0 8px 
        border-bottom: 1px solid $borderColor
    //    overflow: hidden;
    //    text-indent: -9999px;
        z-index: 0

    label 
    
        &> span 
            +themedColor($borderColor, 'border-color');

    [class*=input]
        background-color: transparent !important
        border: 0
        min-width: 0
        width: 100%  
        margin: 0
        padding-left: 24px
        z-index: 1

    //[class*=input]:not(:placeholder-shown) + label span
    //    opacity: 1
    //    text-indent: 0

    > i
        position: absolute
        top: 50%
        margin-top: -8px
        right: 8px
 
    > select[class*=input]
        appearance: none
        background-color: transparent !important
        border: 0

        &::-ms-expand
            display: none 


// Input Radio 

=inputRadio()
    $bgColor: getElementAttrVal('radio', 'bg')
    $color: getElementAttrVal('radio', 'color')
    $borderColor: getElementAttrVal('radio', 'borderColor')
    
    position: relative
    cursor: pointer

    &:before, &:after
        position: absolute
        content: ''

    &:before
        width: 200%
        height: 200%
        @if $bgColor == $lightModeBgColor
            background-color: $lightModeBgColor
        @else
            background-color: $darkModeBgColor   
        border: 1px solid $borderColor
        border-radius: 100%

    &:after
        width: calc(200% - 16px)
        height: calc(200% - 16px)
        border-radius: 100%

    &:checked
        
        &:after  
            @if $bgColor == $lightModeBgColor
                background-color: $darkModeBgColor
            @else
                background-color: $lightModeBgColor 


=inputRadioDy($size)
    $multiplier: getElementAttrVal('radio', 'multiplier')
    
    width: ($size * $multiplier) / 2
    height: ($size * $multiplier) / 2
    margin: calc((#{$size} * #{ $multiplier}) / 4 + #{$basicMargin})

    &:before
        margin: calc(-1 * (#{$size} * #{ $multiplier}) / 4)

    &:after
        margin: calc(#{$basicMargin} - (#{$size} * #{ $multiplier}) / 4)


// Input Checkbox

=inputCheckbox()
    $bgColor: getElementAttrVal('radio', 'bg')
    $color: getElementAttrVal('radio', 'color')
    $borderColor: getElementAttrVal('radio', 'borderColor')
    
    position: relative
    cursor: pointer

    &:before, &:after
        position: absolute
        content: ''

    &:before
        width: 200%
        height: 200%
        background-color: $lightModeBgColor  
        border: 1px solid $borderColor
        border-radius: 100%

    &:after
        width: calc(200% - 16px)
        height: calc(200% - 16px)
        border-radius: 100%

    &:checked
        
        &:after  
            background-color: $lightModeColor

=inputCheckboxDy($size)
    $multiplier: getElementAttrVal('radio', 'multiplier')
    
    width: ($size * $multiplier) / 2
    height: ($size * $multiplier) / 2
    margin: calc((#{$size} * #{ $multiplier}) / 4 + #{$basicMargin})

    &:before
        margin: calc(-1 * (#{$size} * #{ $multiplier}) / 4)

    &:after
        margin: calc(#{$basicMargin} - (#{$size} * #{ $multiplier}) / 4)


// Input Color

=inputColor()
    $bgColor: getElementAttrVal('radio', 'bg')

    background-color: $bgColor
    margin: $basicMargin
    padding: 4px

=inputColorDy($height)
    $multiplier: getElementAttrVal('radio', 'multiplier')
    width: $height * $multiplier
    height: $height * $multiplier


// Input Image

=inputImage()
    margin: $basicMargin


// Range

=range()
    background: transparent
    height: 48px
    -webkit-appearance: none
    margin: 10px 0
    width: 100%

    &:focus
        outline: none

    &::-webkit-slider-runnable-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        box-shadow: 0px 0px 0px #000000
        background: $colorGrey
        border-radius: 6px
        border: 0px solid #000000

    &::-webkit-slider-thumb
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer
        -webkit-appearance: none
        margin-top: -16px

    &:focus::-webkit-slider-runnable-track
        background: $colorGrey

    &::-moz-range-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        box-shadow: 0px 0px 0px #000000
        background: $colorGrey
        border-radius: 6px
        border: 0px solid #000000

    &::-moz-range-thumb
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer

    &::-ms-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        background: transparent
        border-color: transparent
        color: transparent

    &::-ms-fill-lower, &::-ms-fill-upper
        background: $colorGrey
        border: 0px solid #000000
        border-radius: 12px
        box-shadow: 0px 0px 0px #000000

    &::-ms-thumb
        margin-top: 1px
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer

    &:focus
        &::-ms-fill-lower, &::-ms-fill-upper
        background: $colorGrey


// Input File Wrapper

=inputFile()    
    margin: $basicMargin
    align-items: center
    display: flex
    cursor: pointer

    input[type="file"]
        width: 200px
        opacity: 0
        cursor: pointer

    label
        position: absolute
        margin-left: 210px
        color: $colorWhite
        align-items: center
        display: flex 
        cursor: pointer

    label:before
        position: absolute
        content: ''
        width: 200px
        border: 1px solid $colorWhite
        border-radius: 128px
        margin-left: -210px
        cursor: pointer

    label:after
        position: absolute
        content: 'Upload file'
        width: 200px
        color: $colorWhite
        margin-left: -210px
        top: 0
        left: 0
        justify-content: center
        display: flex
        cursor: pointer

=inputFileDy($height)    

    input[type="file"]
        height: $height * 2

    label:before
        height: $height * 2

    label:after
        height: $height * 2


// Search

=search()
    min-width: auto
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: 0 $basicPadding * 2

    &:focus
        background-color: transparent
        border-color: $colorGrey 

=searchDy($height)
    $multiplier: getElementAttrVal('search', 'multiplier')
    height: $height * $multiplier


// Textarea

=textarea()
    min-width: auto
    height: auto
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2

    &:focus
        background-color: $colorLightGrey
        border-color: $colorLightGrey


// Select

=select()
    min-width: auto
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: 0 $basicPadding * 3 0 $basicPadding * 2
    cursor: pointer

    & option 
        background-color: $colorLightGrey
        outline: 0


    &:focus
        background-color: $colorWhite
        border: 1px solid $colorGrey
        border-radius: 12px 12px 0 0

        &::-ms-value
            background-color: transparent

=selectDy($height)
    $multiplier: getElementAttrVal('select', 'multiplier')
    height: $height * $multiplier


// Table

=table()
    border-collapse: separate
    width: 100%

    th
        font-weight: $fontWeightBold
        text-align: left

    tr:not(.#{$classPrefix}table-header)

        td
            border-top: 1px solid $colorGrey
            border-bottom: 1px solid $colorGrey

    tr:not(.#{$classPrefix}table-header)

        td:first-child
            border-left: 1px solid $colorGrey

        td:last-child
            border-right: 1px solid $colorGrey

=tableDy($size)
    border-spacing: 0 $size / 1.5

    td, th
        padding-left: $size / 1.5

    tr:not(.#{$classPrefix}table-header)

        td
            padding: $size / 1.5

    tr:not(.#{$classPrefix}table-header)

        td:first-child
            border-top-left-radius: $size / 1.5
            border-bottom-left-radius: $size / 1.5

        td:last-child
            border-top-right-radius: $size / 1.5
            border-bottom-right-radius: $size / 1.5

// Toast

=toast($bgColor, $textColor)
    position: fixed
    background-color: $bgColor
    min-width: 200px
    max-width: 400px
    min-height: 50px
    max-height: 100px
    color: $textColor
    border-radius: 12px
    padding: $basicPadding
    align-items: center
    justify-content: center
    display: flex
    z-index: 21

=toastPos($bgColor, $textColor)
    +toast($bgColor, $textColor)
    left: 50%
    bottom: 20px
    margin-left: -125px

    &-left-top
        +toast($bgColor, $textColor)
        left: 20px
        top: 20px

    &-center-top
        +toast($bgColor, $textColor)
        left: 50%
        top: 20px
        margin-left: -125px

    &-right-top
        +toast($bgColor, $textColor)
        right: 20px
        top: 20px

    &-left-center
        +toast($bgColor, $textColor)
        left: 20px
        top: 50%
        margin-top: -37.5px

    &-center
        +toast($bgColor, $textColor)
        left: 50%
        top: 50%
        margin-top: -37.5px
        margin-left: -125px

    &-right-center
        +toast($bgColor, $textColor)
        right: 20px
        top: 50%
        margin-top: -37.5px

    &-left-bottom
        +toast($bgColor, $textColor)
        left: 20px
        bottom: 20px

    &-center-bottom
        +toast($bgColor, $textColor)
        left: 50%
        bottom: 20px
        margin-left: -125px

    &-right-bottom
        +toast($bgColor, $textColor)
        right: 20px
        bottom: 20px