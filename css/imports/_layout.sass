@import '_layout-mixins.sass'


// Frame

.#{$classPrefix}-frame
    width: 100%


// Container

.#{$classPrefix}container
    position: relative
    width: 100%
    margin-left: auto
    margin-right: auto
    padding: $basicPadding

    &[class*="scrollable"]
        position: relative
        width: 100%
        height: 100%
        max-height: 100vh
        margin-left: auto
        margin-right: auto
        padding: $basicPadding
        overflow-y: scroll    

    &-full
        position: relative
        width: 100%
        padding: $basicPadding

        &[class*="scrollable"]
            position: relative
            width: 100%
            height: 100%
            max-height: 100vh
            padding: $basicPadding
            overflow-y: scroll     

@media (min-width: $pc)

    .#{$classPrefix}container
        position: relative
        max-width: 1280px
        margin-left: auto
        margin-right: auto
        padding: $basicPadding

@media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

    .#{$classPrefix}container
        max-width: 1680px
    

// Edge

.#{$classPrefix}edge

    &-horizontal
        width: 100%
        flex-direction: row
        display: flex

    &-vertical
        height: 100%
        flex-direction: column
        display: flex

    &-top
        position: sticky
        width: 100%
        top: 0
        left: 0
        flex-direction: row
        display: flex

    &-left
        position: fixed
        height: 100%
        top: 0
        left: 0
        flex-direction: column
        display: flex

    &-right
        position: fixed
        height: 100%
        top: 0
        right: 0
        flex-direction: column
        display: flex

    &-bottom
        position: fixed
        width: 100%
        bottom: 0
        left: 0
        flex-direction: row
        display: flex

[class*="frame"]

    > .#{$classPrefix}group

        > .#{$classPrefix}container

            > .#{$classPrefix}edge-top
                margin-top: -$basicPadding

@media (max-width: $pc)

    [class*="frame"]

        > .#{$classPrefix}group

           > .#{$classPrefix}edge-left, > .#{$classPrefix}edge-right
                position: sticky


// Sub-edge

.#{$classPrefix}sub-edge

    &-top
        position: fixed
        width: 100%
        height: 100%
        flex-direction: row
        display: flex
    
    &-left
        position: fixed
        width: 100%
        height: 100%
        flex-direction: column
        display: flex

    &-right
        position: fixed
        width: 100%
        height: 100%
        flex-direction: column
        display: flex

    &-bottom      
        position: fixed
        width: 100%
        height: 100%
        flex-direction: row
        display: flex

@media (min-width: $pc)   

    .#{$classPrefix}sub-edge

        &-top, &-bottom
            min-height: 300px
            height: 25vh
            
        &-left, &-right
            min-width: 300px
            width: 25vw


// Masonry

.#{$classPrefix}masonry
    +masonry(4)

    &-2
        +masonry(2)

    &-3        
        +masonry(3)

    &-4
        +masonry(4) 

    &-5
        +masonry(5)


// Flex

.#{$classPrefix}group
    +layoutConstructor('display')
        display: flex

.#{$classPrefix}row  
    +layoutConstructor('display')
        flex-direction: row

.#{$classPrefix}row-reverse
    +layoutConstructor('display')
        flex-direction: row-reverse

.#{$classPrefix}column
    +layoutConstructor('display')
        flex-direction: column

.#{$classPrefix}column-reverse
    +layoutConstructor('display')
        flex-direction: column-reverse

.#{$classPrefix}no-wrap
    +layoutConstructor('display')
        flex-wrap: nowrap

.#{$classPrefix}wrap
    +layoutConstructor('display')
        flex-wrap: wrap

.#{$classPrefix}wrap-reverse
    +layoutConstructor('display')
        flex-wrap: wrap-reverse


// Position

.#{$classPrefix}all-center
    +layoutConstructor('axisPosition')
        justify-content: center
        align-items: center

.#{$classPrefix}group

    &.#{$classPrefix}horizontal
        +layoutConstructor('axisPosition')
            +justifyContent()

    &.#{$classPrefix}vertical
        +layoutConstructor('axisPosition')
            +alignItems()
        

.#{$classPrefix}column

    &.#{$classPrefix}horizontal
        +layoutConstructor('axisPosition')
            +alignItems()

    &.#{$classPrefix}vertical
        +layoutConstructor('axisPosition')
            +justifyContent()


.#{$classPrefix}left
    +layoutConstructor('elementPosition')
        margin-left: auto

.#{$classPrefix}center
    +layoutConstructor('elementPosition')
        margin-left: auto
        margin-right: auto

.#{$classPrefix}right
    +layoutConstructor('elementPosition')
        margin-right: auto

.#{$classPrefix}group

    > .#{$classPrefix}left
        +layoutConstructor('elementPosition')
            margin-left: 0
            margin-right: auto

    > .#{$classPrefix}center
        +layoutConstructor('elementPosition')
            margin-left: auto
            margin-right: auto

    > .#{$classPrefix}right
        +layoutConstructor('elementPosition')
            margin-left: auto
            margin-right: 0

// Flexbox areas

.#{$classPrefix}full 
    +layoutConstructor('flexArea')
        +letoFlexAreas(100%) 

.#{$classPrefix}seven-eighths
    +layoutConstructor('flexArea')
        +letoFlexAreas(87.5%)

.#{$classPrefix}five-sixths
    +layoutConstructor('flexArea')
        +letoFlexAreas(calc((100% / 6) * 5)) 

.#{$classPrefix}four-fifths
    +layoutConstructor('flexArea')
        +letoFlexAreas(80%)

.#{$classPrefix}three-quaters
    +layoutConstructor('flexArea')
        +letoFlexAreas(75%)  

.#{$classPrefix}two-thirds
    +layoutConstructor('flexArea')
        +letoFlexAreas(calc((100% / 3) * 2))  

.#{$classPrefix}five-eighths
    +layoutConstructor('flexArea')
        +letoFlexAreas(62.5%)

.#{$classPrefix}three-fifths
    +layoutConstructor('flexArea')
        +letoFlexAreas(60%)     

.#{$classPrefix}half
    +layoutConstructor('flexArea')
        +letoFlexAreas(50%)

.#{$classPrefix}three-sixths
    +layoutConstructor('flexArea')
        +letoFlexAreas(calc((100% / 6) * 3))

.#{$classPrefix}two-fifths
    +layoutConstructor('flexArea')
        +letoFlexAreas(40%)

.#{$classPrefix}three-eighths
    +layoutConstructor('flexArea')
        +letoFlexAreas(37.5%)
    
.#{$classPrefix}third
    +layoutConstructor('flexArea')
        +letoFlexAreas(calc(100% / 3))

.#{$classPrefix}quater
    +layoutConstructor('flexArea')
        +letoFlexAreas(25%)   

.#{$classPrefix}fifth
    +layoutConstructor('flexArea')
        +letoFlexAreas(20%)   

.#{$classPrefix}sixth
    +layoutConstructor('flexArea')
        +letoFlexAreas(calc(100% / 6))   

.#{$classPrefix}eighth
    +layoutConstructor('flexArea')
        +letoFlexAreas(12.5%)


// Flex-shrink

.#{$classPrefix}no-shrink
    +layoutConstructor('shrink')
        flex-shrink: 0


// Space

.#{$classPrefix}space
    +layoutConstructor('space')
        width: 100%
        height: calc($standardSize * 8)

    &-xxs
        +layoutConstructor('space')
            width: 100%
            height: calc($xxs * 8)    

    &-xs
        +layoutConstructor('space')
            width: 100%
            height: calc($xs * 8)    

    &-sm
        +layoutConstructor('space')
            width: 100%
            height: calc($sm * 8)    

    &-md
        +layoutConstructor('space')
            width: 100%
            height: calc($md * 8)  

    &-lg
        +layoutConstructor('space')
            width: 100%
            height: calc($lg * 8)    

    &-xl
        +layoutConstructor('space')
            width: 100%
            height: calc($xl * 8)    

    &-xxl
        +layoutConstructor('space')
            width: 100%
            height: calc($xxl * 8) 